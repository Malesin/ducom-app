{"version":3,"names":["React","useCallback","Animated","useAnimatedReaction","useSharedValue","useChainCallback","useCollapsibleStyle","useConvertAnimatedToValue","useScrollHandlerY","useSharedAnimatedRef","useTabNameContext","useTabsContext","useUpdateScrollViewContentSize","AnimatedMasonry","ensureMasonry","flashListModule","require","createAnimatedComponent","MasonryFlashList","error","console","MasonryFlashListMemo","memo","forwardRef","props","passRef","MasonryFlashListImpl","style","onContentSizeChange","contentContainerStyle","_contentContainerStyle","refreshControl","rest","name","setRef","contentInset","recyclerRef","ref","scrollHandler","enable","hadLoad","onLoad","value","ready","progressViewOffset","useEffect","scrollContentSizeChange","scrollContentSizeChangeHandlers","useMemo","memoRefreshControl","cloneElement","contentInsetValue","memoContentInset","top","memoContentOffset","x","y","memoContentContainerStyle","paddingTop","refWorkaround","recyclerlistview_unsafe"],"sources":["MasonryFlashList.tsx"],"sourcesContent":["import { MasonryFlashListProps, MasonryFlashListRef } from '@shopify/flash-list'\nimport React, { useCallback } from 'react'\nimport Animated, {\n  useAnimatedReaction,\n  useSharedValue,\n} from 'react-native-reanimated'\n\nimport {\n  useChainCallback,\n  useCollapsibleStyle,\n  useConvertAnimatedToValue,\n  useScrollHandlerY,\n  useSharedAnimatedRef,\n  useTabNameContext,\n  useTabsContext,\n  useUpdateScrollViewContentSize,\n} from './hooks'\n\n/**\n * Used as a memo to prevent rerendering too often when the context changes.\n * See: https://github.com/facebook/react/issues/15156#issuecomment-474590693\n */\n\ntype MasonryFlashListMemoProps = React.PropsWithChildren<\n  MasonryFlashListProps<unknown>\n>\ntype MasonryFlashListMemoRef = MasonryFlashListRef<any>\n\nlet AnimatedMasonry: React.ComponentClass<\n  MasonryFlashListProps<any>\n> | null = null\n\nconst ensureMasonry = () => {\n  if (AnimatedMasonry) {\n    return\n  }\n\n  try {\n    const flashListModule = require('@shopify/flash-list')\n    AnimatedMasonry = (Animated.createAnimatedComponent(\n      flashListModule.MasonryFlashList\n    ) as unknown) as React.ComponentClass<MasonryFlashListProps<any>>\n  } catch (error) {\n    console.error(\n      'The optional dependency @shopify/flash-list is not installed. Please install it to use the FlashList component.'\n    )\n  }\n}\n\nconst MasonryFlashListMemo = React.memo(\n  React.forwardRef<MasonryFlashListMemoRef, MasonryFlashListMemoProps>(\n    (props, passRef) => {\n      ensureMasonry()\n      return AnimatedMasonry ? (\n        // @ts-expect-error\n        <AnimatedMasonry ref={passRef} {...props} />\n      ) : (\n        <></>\n      )\n    }\n  )\n)\n\nfunction MasonryFlashListImpl<R>(\n  {\n    style,\n    onContentSizeChange,\n    contentContainerStyle: _contentContainerStyle,\n    refreshControl,\n    ...rest\n  }: Omit<MasonryFlashListProps<R>, 'onScroll'>,\n  passRef: React.Ref<MasonryFlashListMemoRef>\n) {\n  const name = useTabNameContext()\n  const { setRef, contentInset } = useTabsContext()\n  const recyclerRef = useSharedAnimatedRef<any>(null)\n  const ref = useSharedAnimatedRef<any>(passRef)\n\n  const { scrollHandler, enable } = useScrollHandlerY(name)\n\n  const hadLoad = useSharedValue(false)\n\n  const onLoad = useCallback(() => {\n    hadLoad.value = true\n  }, [hadLoad])\n\n  useAnimatedReaction(\n    () => {\n      return hadLoad.value\n    },\n    (ready) => {\n      if (ready) {\n        enable(true)\n      }\n    }\n  )\n\n  const { progressViewOffset, contentContainerStyle } = useCollapsibleStyle()\n\n  React.useEffect(() => {\n    setRef(name, recyclerRef)\n  }, [name, recyclerRef, setRef])\n\n  const scrollContentSizeChange = useUpdateScrollViewContentSize({\n    name,\n  })\n\n  const scrollContentSizeChangeHandlers = useChainCallback(\n    React.useMemo(() => [scrollContentSizeChange, onContentSizeChange], [\n      onContentSizeChange,\n      scrollContentSizeChange,\n    ])\n  )\n\n  const memoRefreshControl = React.useMemo(\n    () =>\n      refreshControl &&\n      React.cloneElement(refreshControl, {\n        progressViewOffset,\n        ...refreshControl.props,\n      }),\n    [progressViewOffset, refreshControl]\n  )\n\n  const contentInsetValue = useConvertAnimatedToValue<number>(contentInset)\n\n  const memoContentInset = React.useMemo(() => ({ top: contentInsetValue }), [\n    contentInsetValue,\n  ])\n\n  const memoContentOffset = React.useMemo(\n    () => ({ x: 0, y: -contentInsetValue }),\n    [contentInsetValue]\n  )\n\n  const memoContentContainerStyle = React.useMemo(\n    () => ({\n      paddingTop: contentContainerStyle.paddingTop,\n      ..._contentContainerStyle,\n    }),\n    [_contentContainerStyle, contentContainerStyle.paddingTop]\n  )\n\n  const refWorkaround = useCallback(\n    (value: MasonryFlashListMemoRef | null): void => {\n      // https://github.com/Shopify/flash-list/blob/2d31530ed447a314ec5429754c7ce88dad8fd087/src/FlashList.tsx#L829\n      // We are not accessing the right element or view of the Flashlist (recyclerlistview). So we need to give\n      // this ref the access to it\n      // @ts-expect-error\n      ;(recyclerRef as any)(value?.recyclerlistview_unsafe)\n      ;(ref as any)(value)\n    },\n    [recyclerRef, ref]\n  )\n\n  return (\n    // @ts-expect-error typescript complains about `unknown` in the memo, it should be T\n    <MasonryFlashListMemo\n      {...rest}\n      onLoad={onLoad}\n      contentContainerStyle={memoContentContainerStyle}\n      ref={refWorkaround}\n      bouncesZoom={false}\n      onScroll={scrollHandler}\n      scrollEventThrottle={16}\n      contentInset={memoContentInset}\n      contentOffset={memoContentOffset}\n      refreshControl={memoRefreshControl}\n      progressViewOffset={progressViewOffset}\n      automaticallyAdjustContentInsets={false}\n      onContentSizeChange={scrollContentSizeChangeHandlers}\n    />\n  )\n}\n\n/**\n * Use like a regular MasonryFlashList.\n */\nexport const MasonryFlashList = React.forwardRef(MasonryFlashListImpl) as <T>(\n  p: MasonryFlashListProps<T> & { ref?: React.Ref<MasonryFlashListMemoRef> }\n) => React.ReactElement\n"],"mappings":"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"}