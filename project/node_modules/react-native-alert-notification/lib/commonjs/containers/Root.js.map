{"version":3,"names":["Root","theme","colors","children","dialogConfig","toastConfig","colorScheme","RN","useColorScheme","safeAreaInsetsContext","useContext","SafeAreaInsetsContext","Color","colorsCustom","isDark","styles","content","Dialog","instance","Toast","StyleSheet","create","flex"],"sources":["Root.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, useContext } from 'react';\nimport RN, { View } from 'react-native';\nimport { SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nimport { IConfigToast, Toast } from './Toast';\nimport { Dialog, IConfigDialog} from './Dialog';\n\nimport { Color, IColors } from '../service';\nimport { StyleSheet } from 'react-native';\n\ntype IProps = {\n  dialogConfig?: Pick<IConfigDialog, 'closeOnOverlayTap' | 'autoClose'>;\n  toastConfig?: Pick<IConfigToast, 'autoClose' | 'titleStyle' | 'textBodyStyle'>;\n  theme?: 'light' | 'dark';\n  colors?: [IColors, IColors] /** ['light_colors' , 'dark_colors'] */;\n  children: ReactElement | ReactElement[];\n};\n\nexport const Root: React.FunctionComponent<IProps> = ({ theme, colors, children, dialogConfig, toastConfig }) => {\n  const colorScheme = RN.useColorScheme?.();\n  const safeAreaInsetsContext = useContext(SafeAreaInsetsContext);\n  Color.colorsCustom = colors;\n\n  const isDark = (theme ?? colorScheme) === 'dark';\n\n  if (safeAreaInsetsContext === null) {\n    return (\n      <SafeAreaProvider>\n        <View style={styles.content}>\n          <React.Fragment>\n            <Dialog ref={Dialog.instance} isDark={isDark} config={dialogConfig} />\n            <Toast ref={Toast.instance} isDark={isDark} config={toastConfig} />\n            {children}\n          </React.Fragment>\n        </View>\n      </SafeAreaProvider>\n    );\n  }\n\n  return (\n    <View style={styles.content}>\n      <React.Fragment>\n        <Dialog ref={Dialog.instance} isDark={isDark} config={dialogConfig} />\n        <Toast ref={Toast.instance} isDark={isDark} config={toastConfig} />\n        {children}\n      </React.Fragment>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAWO,MAAMA,IAAqC,GAAG,QAA4D;EAAA;;EAAA,IAA3D;IAAEC,KAAF;IAASC,MAAT;IAAiBC,QAAjB;IAA2BC,YAA3B;IAAyCC;EAAzC,CAA2D;EAC/G,MAAMC,WAAW,yBAAGC,oBAAA,CAAGC,cAAN,uDAAG,wBAAAD,oBAAA,CAApB;EACA,MAAME,qBAAqB,GAAG,IAAAC,gBAAA,EAAWC,iDAAX,CAA9B;EACAC,cAAA,CAAMC,YAAN,GAAqBX,MAArB;EAEA,MAAMY,MAAM,GAAG,CAACb,KAAK,IAAIK,WAAV,MAA2B,MAA1C;;EAEA,IAAIG,qBAAqB,KAAK,IAA9B,EAAoC;IAClC,oBACE,oBAAC,4CAAD,qBACE,oBAAC,iBAAD;MAAM,KAAK,EAAEM,MAAM,CAACC;IAApB,gBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;MAAQ,GAAG,EAAEC,cAAA,CAAOC,QAApB;MAA8B,MAAM,EAAEJ,MAAtC;MAA8C,MAAM,EAAEV;IAAtD,EADF,eAEE,oBAAC,YAAD;MAAO,GAAG,EAAEe,YAAA,CAAMD,QAAlB;MAA4B,MAAM,EAAEJ,MAApC;MAA4C,MAAM,EAAET;IAApD,EAFF,EAGGF,QAHH,CADF,CADF,CADF;EAWD;;EAED,oBACE,oBAAC,iBAAD;IAAM,KAAK,EAAEY,MAAM,CAACC;EAApB,gBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAQ,GAAG,EAAEC,cAAA,CAAOC,QAApB;IAA8B,MAAM,EAAEJ,MAAtC;IAA8C,MAAM,EAAEV;EAAtD,EADF,eAEE,oBAAC,YAAD;IAAO,GAAG,EAAEe,YAAA,CAAMD,QAAlB;IAA4B,MAAM,EAAEJ,MAApC;IAA4C,MAAM,EAAET;EAApD,EAFF,EAGGF,QAHH,CADF,CADF;AASD,CA9BM;;;;AAgCP,MAAMY,MAAM,GAAGK,uBAAA,CAAWC,MAAX,CAAkB;EAC/BL,OAAO,EAAE;IACPM,IAAI,EAAE;EADC;AADsB,CAAlB,CAAf"}