{"version":3,"names":["React","useContext","RN","View","SafeAreaInsetsContext","SafeAreaProvider","Toast","Dialog","Color","StyleSheet","Root","theme","colors","children","dialogConfig","toastConfig","colorScheme","useColorScheme","safeAreaInsetsContext","colorsCustom","isDark","styles","content","instance","create","flex"],"sources":["Root.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, useContext } from 'react';\nimport RN, { View } from 'react-native';\nimport { SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nimport { IConfigToast, Toast } from './Toast';\nimport { Dialog, IConfigDialog} from './Dialog';\n\nimport { Color, IColors } from '../service';\nimport { StyleSheet } from 'react-native';\n\ntype IProps = {\n  dialogConfig?: Pick<IConfigDialog, 'closeOnOverlayTap' | 'autoClose'>;\n  toastConfig?: Pick<IConfigToast, 'autoClose' | 'titleStyle' | 'textBodyStyle'>;\n  theme?: 'light' | 'dark';\n  colors?: [IColors, IColors] /** ['light_colors' , 'dark_colors'] */;\n  children: ReactElement | ReactElement[];\n};\n\nexport const Root: React.FunctionComponent<IProps> = ({ theme, colors, children, dialogConfig, toastConfig }) => {\n  const colorScheme = RN.useColorScheme?.();\n  const safeAreaInsetsContext = useContext(SafeAreaInsetsContext);\n  Color.colorsCustom = colors;\n\n  const isDark = (theme ?? colorScheme) === 'dark';\n\n  if (safeAreaInsetsContext === null) {\n    return (\n      <SafeAreaProvider>\n        <View style={styles.content}>\n          <React.Fragment>\n            <Dialog ref={Dialog.instance} isDark={isDark} config={dialogConfig} />\n            <Toast ref={Toast.instance} isDark={isDark} config={toastConfig} />\n            {children}\n          </React.Fragment>\n        </View>\n      </SafeAreaProvider>\n    );\n  }\n\n  return (\n    <View style={styles.content}>\n      <React.Fragment>\n        <Dialog ref={Dialog.instance} isDark={isDark} config={dialogConfig} />\n        <Toast ref={Toast.instance} isDark={isDark} config={toastConfig} />\n        {children}\n      </React.Fragment>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAuBC,UAAvB,QAAyC,OAAzC;AACA,OAAOC,EAAP,IAAaC,IAAb,QAAyB,cAAzB;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,gCAAxD;AACA,SAAuBC,KAAvB,QAAoC,SAApC;AACA,SAASC,MAAT,QAAqC,UAArC;AAEA,SAASC,KAAT,QAA+B,YAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAUA,OAAO,MAAMC,IAAqC,GAAG,QAA4D;EAAA;;EAAA,IAA3D;IAAEC,KAAF;IAASC,MAAT;IAAiBC,QAAjB;IAA2BC,YAA3B;IAAyCC;EAAzC,CAA2D;EAC/G,MAAMC,WAAW,yBAAGd,EAAE,CAACe,cAAN,uDAAG,wBAAAf,EAAE,CAAtB;EACA,MAAMgB,qBAAqB,GAAGjB,UAAU,CAACG,qBAAD,CAAxC;EACAI,KAAK,CAACW,YAAN,GAAqBP,MAArB;EAEA,MAAMQ,MAAM,GAAG,CAACT,KAAK,IAAIK,WAAV,MAA2B,MAA1C;;EAEA,IAAIE,qBAAqB,KAAK,IAA9B,EAAoC;IAClC,oBACE,oBAAC,gBAAD,qBACE,oBAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACC;IAApB,gBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,MAAD;MAAQ,GAAG,EAAEf,MAAM,CAACgB,QAApB;MAA8B,MAAM,EAAEH,MAAtC;MAA8C,MAAM,EAAEN;IAAtD,EADF,eAEE,oBAAC,KAAD;MAAO,GAAG,EAAER,KAAK,CAACiB,QAAlB;MAA4B,MAAM,EAAEH,MAApC;MAA4C,MAAM,EAAEL;IAApD,EAFF,EAGGF,QAHH,CADF,CADF,CADF;EAWD;;EAED,oBACE,oBAAC,IAAD;IAAM,KAAK,EAAEQ,MAAM,CAACC;EAApB,gBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,MAAD;IAAQ,GAAG,EAAEf,MAAM,CAACgB,QAApB;IAA8B,MAAM,EAAEH,MAAtC;IAA8C,MAAM,EAAEN;EAAtD,EADF,eAEE,oBAAC,KAAD;IAAO,GAAG,EAAER,KAAK,CAACiB,QAAlB;IAA4B,MAAM,EAAEH,MAApC;IAA4C,MAAM,EAAEL;EAApD,EAFF,EAGGF,QAHH,CADF,CADF;AASD,CA9BM;AAgCP,MAAMQ,MAAM,GAAGZ,UAAU,CAACe,MAAX,CAAkB;EAC/BF,OAAO,EAAE;IACPG,IAAI,EAAE;EADC;AADsB,CAAlB,CAAf"}